html
  head
    title= `Let's buzz`
    script(src='https://unpkg.com/tone')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js')
    style
      include ../styles.css
  body
    section#welcome
    div.center
    footer
    script.
        const socket = io({
          path: `/quiz-buzzer/socket.io`
        });

        const state = {
          playerName: "",
          playerAvatar: "",
          buttonUnlocked: false,
          welcomeMessage: `Enter a player name to identify yourself, or click cancel to choose a random name`,
        };

        const render = {
          namePrompt: () => {
            document.querySelector(
              ".center"
            ).innerHTML = `<div id="inputContainer"><input id="inputField" placeholder="Enter a name" required autofocus /><button onclick="nameSubmitted()">ðŸ‘Œ</button></div>`;

            document
              .getElementById("inputField")
              .addEventListener("input", nameChanged);
          },
          welcome: () => {
            document.getElementById(
              "welcome"
            ).innerHTML = ` <img src=${state.playerAvatar} /> ${state.playerName}`;

            document.querySelector(
              ".center"
            ).innerHTML = ` <p>  Hello ðŸ‘‹,<br /> A buzzer ðŸš¨ will appear once the game starts... </p>`;
          },
          button: () => {
            document.querySelector(".center").innerHTML = `<button ${
              state.buttonUnlocked ? "" : "disabled"
            } onclick="buzz()" id="buzzer"></button>
          ${
            state.buttonUnlocked
              ? ""
              : "<p>ðŸ”’! Waiting for the next question..</p>"
          }`;
          },
        };

        // Respond to pings
        socket.on("ping", ({ latency }={}) => {
          socket.emit("pingBack");
          console.info("latency: ", latency);
        });

        // Show the Button
        socket.on("unlockButton", () => {
          state.buttonUnlocked = true;
          render.button();
        });

        socket.on("updatePlayers", (count) => {
          document.querySelector("footer").innerHTML = count + " players online";
        });

        // Welcome Player
        function join() {
          render.namePrompt();
        }

        function buzz() {
          socket.emit("buzzed");
          state.buttonUnlocked = false;
          render.button();
          playSound();
        }

        function nameChanged({ target: { value } }) {
          if (value.trim() !== "") {
            document.querySelector("#inputContainer button").style.opacity = "1";
            state.playerName = value;
            state.playerAvatar = `https://avatars.dicebear.com/api/gridy/${value}.svg`;
          }
        }

        function nameSubmitted() {
          document.body.style.backgroundColor = "#030301";
          socket.emit("join", state.playerName);
          render.welcome();
        }

        function playSound(sound = "C4") {
          var synth = new Tone.Synth().toMaster();
          synth.triggerAttackRelease("C4", "8n");
        }

        join();

        window.state = state;
        window.render = render;